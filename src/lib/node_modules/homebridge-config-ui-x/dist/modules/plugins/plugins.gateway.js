"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("@nestjs/common");
const websockets_1 = require("@nestjs/websockets");
const color = require("bash-color");
const plugins_service_1 = require("./plugins.service");
const logger_service_1 = require("../../core/logger/logger.service");
const ws_admin_guard_1 = require("../../core/auth/guards/ws-admin-guard");
let PluginsGateway = class PluginsGateway {
    constructor(pluginsService, logger) {
        this.pluginsService = pluginsService;
        this.logger = logger;
    }
    installPlugin(client, payload) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return yield this.pluginsService.installPlugin(payload, client);
            }
            catch (e) {
                this.logger.error(e);
                client.emit('stdout', '\n\r' + color.red(e.toString()) + '\n\r');
                return new websockets_1.WsException(e);
            }
        });
    }
    uninstallPlugin(client, payload) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return yield this.pluginsService.uninstallPlugin(payload, client);
            }
            catch (e) {
                this.logger.error(e);
                client.emit('stdout', '\n\r' + color.red(e.toString()) + '\n\r');
                return new websockets_1.WsException(e);
            }
        });
    }
    updatePlugin(client, payload) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return yield this.pluginsService.updatePlugin(payload, client);
            }
            catch (e) {
                this.logger.error(e);
                client.emit('stdout', '\n\r' + color.red(e.toString()) + '\n\r');
                return new websockets_1.WsException(e);
            }
        });
    }
    homebridgeUpdate(client, payload) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return yield this.pluginsService.updateHomebridgePackage(client);
            }
            catch (e) {
                return new websockets_1.WsException(e.message);
            }
        });
    }
};
__decorate([
    websockets_1.SubscribeMessage('install'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], PluginsGateway.prototype, "installPlugin", null);
__decorate([
    websockets_1.SubscribeMessage('uninstall'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], PluginsGateway.prototype, "uninstallPlugin", null);
__decorate([
    websockets_1.SubscribeMessage('update'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], PluginsGateway.prototype, "updatePlugin", null);
__decorate([
    websockets_1.SubscribeMessage('homebridge-update'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], PluginsGateway.prototype, "homebridgeUpdate", null);
PluginsGateway = __decorate([
    common_1.UseGuards(ws_admin_guard_1.WsAdminGuard),
    websockets_1.WebSocketGateway({ namespace: '/plugins' }),
    __metadata("design:paramtypes", [plugins_service_1.PluginsService,
        logger_service_1.Logger])
], PluginsGateway);
exports.PluginsGateway = PluginsGateway;
//# sourceMappingURL=plugins.gateway.js.map